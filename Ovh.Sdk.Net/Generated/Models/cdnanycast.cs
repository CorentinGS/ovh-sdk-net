//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _cdnanycast {
    
    
    // Id: Anycast Namespace: cdnanycast
    public class Anycast {
        
        // Key: anycast Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("anycast")]
        public string _Anycast { get; set; }//;
        
        // Key: backendLimit Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backendLimit")]
        public long BackendLimit { get; set; }//;
        
        // Key: backendUse Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backendUse")]
        public long BackendUse { get; set; }//;
        
        // Key: cacheRuleLimitPerDomain Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cacheRuleLimitPerDomain")]
        public long CacheRuleLimitPerDomain { get; set; }//;
        
        // Key: lastQuotaOrder Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastQuotaOrder")]
        public System.DateTime? LastQuotaOrder { get; set; }//;
        
        // Key: logUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("logUrl")]
        public string LogUrl { get; set; }//;
        
        // Key: offer Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public System.String? Offer { get; set; }//;
        
        // Key: quota Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public long Quota { get; set; }//;
        
        // Key: service Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("service")]
        public string Service { get; set; }//;
    }
    
    // Id: Anycast Namespace: cdnanycast
    public class AnycastWithIAM {
        
        // Key: anycast Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("anycast")]
        public string Anycast { get; set; }//;
        
        // Key: backendLimit Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backendLimit")]
        public long BackendLimit { get; set; }//;
        
        // Key: backendUse Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backendUse")]
        public long BackendUse { get; set; }//;
        
        // Key: cacheRuleLimitPerDomain Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cacheRuleLimitPerDomain")]
        public long CacheRuleLimitPerDomain { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata? Iam { get; set; }//;
        
        // Key: lastQuotaOrder Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastQuotaOrder")]
        public System.DateTime? LastQuotaOrder { get; set; }//;
        
        // Key: logUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("logUrl")]
        public string LogUrl { get; set; }//;
        
        // Key: offer Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("offer")]
        public System.String? Offer { get; set; }//;
        
        // Key: quota Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("quota")]
        public long Quota { get; set; }//;
        
        // Key: service Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("service")]
        public string Service { get; set; }//;
    }
    
    // Id: Backend Namespace: cdnanycast
    public class Backend {
        
        // Key: ip Type: ipv4 FullType: ipv4
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
    }
    
    // Id: CacheRule Namespace: cdnanycast
    public class CacheRule {
        
        // Key: cacheRuleId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cacheRuleId")]
        public long CacheRuleId { get; set; }//;
        
        // Key: cacheType Type: cdnanycast.CacheRuleCacheTypeEnum FullType: cdnanycast.CacheRuleCacheTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cacheType")]
        public _cdnanycast.CacheRuleCacheTypeEnum CacheType { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public string Domain { get; set; }//;
        
        // Key: fileMatch Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fileMatch")]
        public string FileMatch { get; set; }//;
        
        // Key: fileType Type: cdnanycast.CacheRuleFileTypeEnum FullType: cdnanycast.CacheRuleFileTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fileType")]
        public _cdnanycast.CacheRuleFileTypeEnum FileType { get; set; }//;
        
        // Key: status Type: cdnanycast.CacheRuleStatusEnum FullType: cdnanycast.CacheRuleStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _cdnanycast.CacheRuleStatusEnum Status { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
    }
    
    // Id: CacheRuleCacheTypeEnum Namespace: cdnanycast
    public enum CacheRuleCacheTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("forceCache")]
        forceCache,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("noCache")]
        noCache,
    }
    
    // Id: CacheRuleFileTypeEnum Namespace: cdnanycast
    public enum CacheRuleFileTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("extension")]
        extension,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("file")]
        file,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("folder")]
        folder,
    }
    
    // Id: CacheRuleStatusEnum Namespace: cdnanycast
    public enum CacheRuleStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("deleting")]
        deleting,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("off")]
        off,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("on")]
        on,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
    }
    
    // Id: Domain Namespace: cdnanycast
    public class Domain {
        
        // Key: cacheRuleUse Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cacheRuleUse")]
        public long CacheRuleUse { get; set; }//;
        
        // Key: cname Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cname")]
        public string Cname { get; set; }//;
        
        // Key: domain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("domain")]
        public string _Domain { get; set; }//;
        
        // Key: status Type: cdnanycast.DomainStatusEnum FullType: cdnanycast.DomainStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _cdnanycast.DomainStatusEnum Status { get; set; }//;
        
        // Key: type Type: cdnanycast.DomainTypeEnum FullType: cdnanycast.DomainTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _cdnanycast.DomainTypeEnum Type { get; set; }//;
    }
    
    // Id: DomainStatusEnum Namespace: cdnanycast
    public enum DomainStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("off")]
        off,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("on")]
        on,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removing")]
        removing,
    }
    
    // Id: DomainTypeEnum Namespace: cdnanycast
    public enum DomainTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("plain")]
        plain,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ssl")]
        ssl,
    }
    
    // Id: LogsURL Namespace: cdnanycast
    public class LogsURL {
        
        // Key: expirationDate Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expirationDate")]
        public System.DateTime ExpirationDate { get; set; }//;
        
        // Key: url Type: string FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("url")]
        public string Url { get; set; }//;
    }
    
    // Id: Pop Namespace: cdnanycast
    public class Pop {
        
        // Key: city Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("city")]
        public string City { get; set; }//;
        
        // Key: comment Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comment")]
        public string Comment { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: status Type: cdnanycast.PopStatusEnum FullType: cdnanycast.PopStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _cdnanycast.PopStatusEnum Status { get; set; }//;
    }
    
    // Id: PopStatusEnum Namespace: cdnanycast
    public enum PopStatusEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("down")]
        down,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ok")]
        ok,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("rerouted")]
        rerouted,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("unknown")]
        unknown,
    }
    
    // Id: Ssl Namespace: cdnanycast
    public class Ssl {
        
        // Key: certificateProvider Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certificateProvider")]
        public string CertificateProvider { get; set; }//;
        
        // Key: certificateValidFrom Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certificateValidFrom")]
        public System.DateTime? CertificateValidFrom { get; set; }//;
        
        // Key: certificateValidTo Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("certificateValidTo")]
        public System.DateTime? CertificateValidTo { get; set; }//;
        
        // Key: cn Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cn")]
        public System.String? Cn { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: status Type: cdnanycast.SslStateEnum FullType: cdnanycast.SslStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _cdnanycast.SslStateEnum Status { get; set; }//;
    }
    
    // Id: SslStateEnum Namespace: cdnanycast
    public enum SslStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("checking")]
        checking,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creating")]
        creating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("off")]
        off,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("on")]
        on,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removing")]
        removing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updating")]
        updating,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uploading")]
        uploading,
    }
    
    // Id: StatsDataType Namespace: cdnanycast
    public class StatsDataType {
        
        // Key: date Type: datetime FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("date")]
        public System.DateTime Date { get; set; }//;
        
        // Key: value Type: long FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("value")]
        public System.Int64? Value { get; set; }//;
    }
    
    // Id: StatsPeriodEnum Namespace: cdnanycast
    public enum StatsPeriodEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("day")]
        day,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("month")]
        month,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("week")]
        week,
    }
    
    // Id: StatsTypeEnum Namespace: cdnanycast
    public enum StatsTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("backend")]
        backend,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cdn")]
        cdn,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("threat")]
        threat,
    }
    
    // Id: StatsValueEnum Namespace: cdnanycast
    public enum StatsValueEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("bandwidth")]
        bandwidth,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("request")]
        request,
    }
    
    // Id: Task Namespace: cdnanycast
    public class Task {
        
        // Key: comment Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comment")]
        public System.String? Comment { get; set; }//;
        
        // Key: function Type: cdnanycast.TaskFunctionEnum FullType: cdnanycast.TaskFunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public _cdnanycast.TaskFunctionEnum Function { get; set; }//;
        
        // Key: status Type: cdnanycast.TaskStateEnum FullType: cdnanycast.TaskStateEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _cdnanycast.TaskStateEnum Status { get; set; }//;
        
        // Key: taskId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("taskId")]
        public long TaskId { get; set; }//;
    }
    
    // Id: TaskFunctionEnum Namespace: cdnanycast
    public enum TaskFunctionEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flush")]
        flush,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("flushAll")]
        flushAll,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("generateSsl")]
        generateSsl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("installSsl")]
        installSsl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("reinstallSsl")]
        reinstallSsl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("removeDomain")]
        removeDomain,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uninstallSsl")]
        uninstallSsl,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("updateCacheRule")]
        updateCacheRule,
    }
    
    // Id: TaskStateEnum Namespace: cdnanycast
    public enum TaskStateEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("cancelled")]
        cancelled,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doing")]
        doing,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("done")]
        done,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("error")]
        error,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todo")]
        todo,
    }
    
    // Id: OrderCacheRuleEnum Namespace: cdnanycast
    public enum OrderCacheRuleEnum {
        
        _100 = 100,
        
        _1000 = 1000,
    }
    
    // Id: OrderQuotaEnum Namespace: cdnanycast
    public enum OrderQuotaEnum {
        
        _1 = 1,
        
        _10 = 10,
        
        _100 = 100,
        
        _1000 = 1000,
    }
}
