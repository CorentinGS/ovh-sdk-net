//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _dedicated_nasha {
    
    
    // Id: Access Namespace: dedicated.nasha
    public class Access {
        
        // Key: accessId Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("accessId")]
        public long AccessId { get; set; }//;
        
        // Key: aclDescription Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("aclDescription")]
        public string AclDescription { get; set; }//;
        
        // Key: ip Type: ipBlock FullType: ipBlock
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
        
        // Key: type Type: dedicated.storage.AclTypeEnum FullType: dedicated.storage.AclTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _dedicated_storage.AclTypeEnum Type { get; set; }//;
    }
    
    // Id: Partition Namespace: dedicated.nasha
    public class Partition {
        
        // Key: partitionCapacity Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("partitionCapacity")]
        public long PartitionCapacity { get; set; }//;
        
        // Key: partitionDescription Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("partitionDescription")]
        public string PartitionDescription { get; set; }//;
        
        // Key: partitionName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("partitionName")]
        public string PartitionName { get; set; }//;
        
        // Key: protocol Type: dedicated.storage.ProtocolEnum FullType: dedicated.storage.ProtocolEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("protocol")]
        public _dedicated_storage.ProtocolEnum Protocol { get; set; }//;
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public long Size { get; set; }//;
        
        // Key: usedBySnapshots Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("usedBySnapshots")]
        public long UsedBySnapshots { get; set; }//;
    }
    
    // Id: Quota Namespace: dedicated.nasha
    public class Quota {
        
        // Key: size Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("size")]
        public long Size { get; set; }//;
        
        // Key: uid Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("uid")]
        public long Uid { get; set; }//;
    }
    
    // Id: Snapshot Namespace: dedicated.nasha
    public class Snapshot {
        
        // Key: snapshotType Type: dedicated.storage.SnapshotEnum FullType: dedicated.storage.SnapshotEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("snapshotType")]
        public _dedicated_storage.SnapshotEnum SnapshotType { get; set; }//;
    }
    
    // Id: Storage Namespace: dedicated.nasha
    public class Storage {
        
        // Key: canCreatePartition Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCreatePartition")]
        public bool CanCreatePartition { get; set; }//;
        
        // Key: customName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customName")]
        public string CustomName { get; set; }//;
        
        // Key: datacenter Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public string Datacenter { get; set; }//;
        
        // Key: diskType Type: dedicated.storage.DiskTypeEnum FullType: dedicated.storage.DiskTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("diskType")]
        public _dedicated_storage.DiskTypeEnum DiskType { get; set; }//;
        
        // Key: ip Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
        
        // Key: monitored Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monitored")]
        public bool Monitored { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
        
        // Key: zpoolCapacity Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zpoolCapacity")]
        public long ZpoolCapacity { get; set; }//;
        
        // Key: zpoolSize Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zpoolSize")]
        public long ZpoolSize { get; set; }//;
    }
    
    // Id: Storage Namespace: dedicated.nasha
    public class StorageWithIAM {
        
        // Key: canCreatePartition Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCreatePartition")]
        public bool CanCreatePartition { get; set; }//;
        
        // Key: customName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("customName")]
        public string CustomName { get; set; }//;
        
        // Key: datacenter Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("datacenter")]
        public string Datacenter { get; set; }//;
        
        // Key: diskType Type: dedicated.storage.DiskTypeEnum FullType: dedicated.storage.DiskTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("diskType")]
        public _dedicated_storage.DiskTypeEnum DiskType { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata Iam { get; set; }//;
        
        // Key: ip Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public string Ip { get; set; }//;
        
        // Key: monitored Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("monitored")]
        public bool Monitored { get; set; }//;
        
        // Key: serviceName Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serviceName")]
        public string ServiceName { get; set; }//;
        
        // Key: zpoolCapacity Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zpoolCapacity")]
        public long ZpoolCapacity { get; set; }//;
        
        // Key: zpoolSize Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zpoolSize")]
        public long ZpoolSize { get; set; }//;
    }
    
    // Id: customSnap Namespace: dedicated.nasha
    public class customSnap {
        
        // Key: expiration Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expiration")]
        public string Expiration { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
    }
    
    // Id: options Namespace: dedicated.nasha
    public class options {
        
        // Key: atime Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("atime")]
        public string Atime { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: recordsize Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("recordsize")]
        public string Recordsize { get; set; }//;
        
        // Key: sync Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("sync")]
        public string Sync { get; set; }//;
    }
}
