//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _domain_zone {
    
    
    // Id: Capabilities Namespace: domain.zone
    public class Capabilities {
        
        // Key: dynHost Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dynHost")]
        public bool DynHost { get; set; }//;
    }
    
    // Id: Dnssec Namespace: domain.zone
    public class Dnssec {
        
        // Key: status Type: domain.DnssecStatusEnum FullType: domain.DnssecStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _domain.DnssecStatusEnum Status { get; set; }//;
    }
    
    // Id: DynHostLogin Namespace: domain.zone
    public class DynHostLogin {
        
        // Key: login Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("login")]
        public string Login { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public string Zone { get; set; }//;
    }
    
    // Id: DynHostRecord Namespace: domain.zone
    public class DynHostRecord {
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: ip Type: ip FullType: ip
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ip")]
        public System.Net.IPAddress Ip { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public string Zone { get; set; }//;
    }
    
    // Id: Import Namespace: domain.zone
    public class Import {
        
        // Key: zoneFile Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zoneFile")]
        public string ZoneFile { get; set; }//;
    }
    
    // Id: Option Namespace: domain.zone
    public class Option {
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
    }
    
    // Id: Record Namespace: domain.zone
    public class Record {
        
        // Key: fieldType Type: domain.zone.RecordTypeEnum FullType: domain.zone.RecordTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fieldType")]
        public _domain_zone.RecordTypeEnum FieldType { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public string Zone { get; set; }//;
    }
    
    // Id: RecordCreate Namespace: domain.zone
    public class RecordCreate {
        
        // Key: fieldType Type: domain.zone.RecordTypeEnum FullType: domain.zone.RecordTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fieldType")]
        public _domain_zone.RecordTypeEnum FieldType { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public string Zone { get; set; }//;
    }
    
    // Id: RecordTypeEnum Namespace: domain.zone
    public enum RecordTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("A")]
        A,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("AAAA")]
        AAAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CAA")]
        CAA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("CNAME")]
        CNAME,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DKIM")]
        DKIM,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DMARC")]
        DMARC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DNAME")]
        DNAME,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("LOC")]
        LOC,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MX")]
        MX,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NAPTR")]
        NAPTR,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("NS")]
        NS,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("PTR")]
        PTR,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SPF")]
        SPF,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SRV")]
        SRV,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("SSHFP")]
        SSHFP,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("TLSA")]
        TLSA,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("TXT")]
        TXT,
    }
    
    // Id: RecordUpdate Namespace: domain.zone
    public class RecordUpdate {
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
    }
    
    // Id: Redirection Namespace: domain.zone
    public class Redirection {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: keywords Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keywords")]
        public string Keywords { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: title Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("title")]
        public string Title { get; set; }//;
        
        // Key: type Type: domain.zone.RedirectionTypeEnum FullType: domain.zone.RedirectionTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _domain_zone.RedirectionTypeEnum Type { get; set; }//;
        
        // Key: zone Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zone")]
        public string Zone { get; set; }//;
    }
    
    // Id: RedirectionCreate Namespace: domain.zone
    public class RedirectionCreate {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: keywords Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keywords")]
        public string Keywords { get; set; }//;
        
        // Key: subDomain Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("subDomain")]
        public string SubDomain { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: title Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("title")]
        public string Title { get; set; }//;
        
        // Key: type Type: domain.zone.RedirectionTypeEnum FullType: domain.zone.RedirectionTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _domain_zone.RedirectionTypeEnum Type { get; set; }//;
    }
    
    // Id: RedirectionTypeEnum Namespace: domain.zone
    public enum RedirectionTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("invisible")]
        invisible,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("visible")]
        visible,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("visiblePermanent")]
        visiblePermanent,
    }
    
    // Id: RedirectionUpdate Namespace: domain.zone
    public class RedirectionUpdate {
        
        // Key: description Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("description")]
        public string Description { get; set; }//;
        
        // Key: keywords Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("keywords")]
        public string Keywords { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
        
        // Key: title Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("title")]
        public string Title { get; set; }//;
        
        // Key: type Type: domain.zone.RedirectionTypeEnum FullType: domain.zone.RedirectionTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("type")]
        public _domain_zone.RedirectionTypeEnum Type { get; set; }//;
    }
    
    // Id: Reset Namespace: domain.zone
    public class Reset {
        
        // Key: DnsRecords Type: domain.zone.ResetRecord[] FullType: domain.zone.ResetRecord[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("DnsRecords")]
        public _domain_zone.ResetRecord[] DnsRecords { get; set; }//;
        
        // Key: minimized Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("minimized")]
        public bool Minimized { get; set; }//;
    }
    
    // Id: ResetRecord Namespace: domain.zone
    public class ResetRecord {
        
        // Key: fieldType Type: domain.zone.ResettableNamedResolutionFieldTypeEnum FullType: domain.zone.ResettableNamedResolutionFieldTypeEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("fieldType")]
        public _domain_zone.ResettableNamedResolutionFieldTypeEnum FieldType { get; set; }//;
        
        // Key: target Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("target")]
        public string Target { get; set; }//;
    }
    
    // Id: ResettableNamedResolutionFieldTypeEnum Namespace: domain.zone
    public enum ResettableNamedResolutionFieldTypeEnum {
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("A")]
        A,
        
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("MX")]
        MX,
    }
    
    // Id: Soa Namespace: domain.zone
    public class Soa {
        
        // Key: email Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("email")]
        public string Email { get; set; }//;
        
        // Key: expire Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("expire")]
        public long Expire { get; set; }//;
        
        // Key: nxDomainTtl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nxDomainTtl")]
        public long NxDomainTtl { get; set; }//;
        
        // Key: refresh Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("refresh")]
        public long Refresh { get; set; }//;
        
        // Key: serial Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("serial")]
        public long Serial { get; set; }//;
        
        // Key: server Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("server")]
        public string Server { get; set; }//;
        
        // Key: ttl Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("ttl")]
        public long Ttl { get; set; }//;
    }
    
    // Id: Status Namespace: domain.zone
    public class Status {
        
        // Key: errors Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("errors")]
        public string[] Errors { get; set; }//;
        
        // Key: isDeployed Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("isDeployed")]
        public bool IsDeployed { get; set; }//;
        
        // Key: warnings Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("warnings")]
        public string[] Warnings { get; set; }//;
    }
    
    // Id: Task Namespace: domain.zone
    public class Task {
        
        // Key: canAccelerate Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canAccelerate")]
        public bool CanAccelerate { get; set; }//;
        
        // Key: canCancel Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canCancel")]
        public bool CanCancel { get; set; }//;
        
        // Key: canRelaunch Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("canRelaunch")]
        public bool CanRelaunch { get; set; }//;
        
        // Key: comment Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("comment")]
        public string Comment { get; set; }//;
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: doneDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("doneDate")]
        public System.DateTime DoneDate { get; set; }//;
        
        // Key: function Type: domain.TaskFunctionEnum FullType: domain.TaskFunctionEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("function")]
        public _domain.TaskFunctionEnum Function { get; set; }//;
        
        // Key: id Type: long FullType: long
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("id")]
        public long Id { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: status Type: domain.TaskStatusEnum FullType: domain.TaskStatusEnum
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("status")]
        public _domain.TaskStatusEnum Status { get; set; }//;
        
        // Key: todoDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("todoDate")]
        public System.DateTime TodoDate { get; set; }//;
    }
    
    // Id: Zone Namespace: domain.zone
    public class Zone {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public bool DnssecSupported { get; set; }//;
        
        // Key: hasDnsAnycast Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasDnsAnycast")]
        public bool HasDnsAnycast { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: nameServers Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public string[] NameServers { get; set; }//;
    }
    
    // Id: ZoneRestorePoint Namespace: domain.zone
    public class ZoneRestorePoint {
        
        // Key: creationDate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("creationDate")]
        public System.DateTime CreationDate { get; set; }//;
        
        // Key: zoneFileUrl Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("zoneFileUrl")]
        public string ZoneFileUrl { get; set; }//;
    }
    
    // Id: Zone Namespace: domain.zone
    public class ZoneWithIAM {
        
        // Key: dnssecSupported Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("dnssecSupported")]
        public bool DnssecSupported { get; set; }//;
        
        // Key: hasDnsAnycast Type: boolean FullType: boolean
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("hasDnsAnycast")]
        public bool HasDnsAnycast { get; set; }//;
        
        // Key: iam Type: iam.ResourceMetadata FullType: 
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("iam")]
        public _iam.ResourceMetadata Iam { get; set; }//;
        
        // Key: lastUpdate Type: datetime FullType: datetime
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("lastUpdate")]
        public System.DateTime LastUpdate { get; set; }//;
        
        // Key: name Type: string FullType: string
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("name")]
        public string Name { get; set; }//;
        
        // Key: nameServers Type: string[] FullType: string[]
        [System.Text.Json.Serialization.JsonPropertyNameAttribute("nameServers")]
        public string[] NameServers { get; set; }//;
    }
}
